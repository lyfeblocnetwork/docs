import{_ as s,o as a,c as e,Q as o}from"./chunks/framework.1a91c06a.js";const b=JSON.parse('{"title":"Query operator information","description":"","frontmatter":{"id":"query-operator-info","title":"Query operator information","head":[["meta",{"property":"og:title","content":"Query operator information | Lyfebloc Docs"}],["meta",{"property":"og:description","content":"Lyfebloc Network is a highly scalable modular blockchain powering dynamic applications with extensive full-stack adaptability."}]]},"headers":[],"relativePath":"get-started/operator-information.md","filePath":"get-started/operator-information.md","lastUpdated":1739729557000}'),t={name:"get-started/operator-information.md"},n=o('<h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><p>This guide assumes you have followed the <a href="/docs/get-started/set-up-ibft-locally">Local Setup</a> or <a href="/docs/get-started/set-up-ibft-on-the-cloud">guide on how to set up an IBFT cluster on the cloud</a>.</p><p>A functioning node is required in order to query any kind of operator information.</p><p>With Lyfebloc Network, node operators are in control and informed about what the node they&#39;re operating is doing.<br> At any time, they can use the node information layer, built on top of gRPC, and get meaningful information - no log sifting required.</p><p>:::note</p><p>If your node isn&#39;t running on <code>127.0.0.1:8545</code> you should add a flag <code>--grpc-address &lt;address:port&gt;</code> to the commands listed in this document.</p><p>:::</p><h2 id="peer-information" tabindex="-1">Peer information <a class="header-anchor" href="#peer-information" aria-label="Permalink to &quot;Peer information&quot;">​</a></h2><h3 id="peers-list" tabindex="-1">Peers list <a class="header-anchor" href="#peers-list" aria-label="Permalink to &quot;Peers list&quot;">​</a></h3><p>To get a complete list of connected peers (including the running node itself), run the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">peers</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">peers</span><span style="color:#24292E;"> </span><span style="color:#032F62;">list</span></span></code></pre></div><p>This will return a list of libp2p addresses that are currently peers of the running client.</p><h3 id="peer-status" tabindex="-1">Peer status <a class="header-anchor" href="#peer-status" aria-label="Permalink to &quot;Peer status&quot;">​</a></h3><p>For the status of a specific peer, run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">peers</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--peer-id</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">addres</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">peers</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--peer-id</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">addres</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>With the <em>address</em> parameter being the libp2p address of the peer.</p><h2 id="ibft-info" tabindex="-1">IBFT info <a class="header-anchor" href="#ibft-info" aria-label="Permalink to &quot;IBFT info&quot;">​</a></h2><p>Lots of times, an operator might want to know about the state of the operating node in IBFT consensus.</p><p>Luckily, Lyfebloc Network provides an easy way to find this information.</p><h3 id="snapshots" tabindex="-1">Snapshots <a class="header-anchor" href="#snapshots" aria-label="Permalink to &quot;Snapshots&quot;">​</a></h3><p>Running the following command returns the most recent snapshot.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ibft</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">snapshot</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ibft</span><span style="color:#24292E;"> </span><span style="color:#032F62;">snapshot</span></span></code></pre></div><p>To query the snapshot at a specific height (block number), the operator can run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ibft</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">snapshot</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--num</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">block-numbe</span><span style="color:#E1E4E8;">r</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ibft</span><span style="color:#24292E;"> </span><span style="color:#032F62;">snapshot</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--num</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">block-numbe</span><span style="color:#24292E;">r</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><h3 id="candidates" tabindex="-1">Candidates <a class="header-anchor" href="#candidates" aria-label="Permalink to &quot;Candidates&quot;">​</a></h3><p>To get the latest info on candidates, the operator can run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ibft</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">candidates</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ibft</span><span style="color:#24292E;"> </span><span style="color:#032F62;">candidates</span></span></code></pre></div><p>This command queries the current set of proposed candidates, as well as candidates that have not been included yet</p><h3 id="status" tabindex="-1">Status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;Status&quot;">​</a></h3><p>The following command returns the current validator key of the running IBFT client:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ibft</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ibft</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span></span></code></pre></div><h2 id="transaction-pool" tabindex="-1">Transaction pool <a class="header-anchor" href="#transaction-pool" aria-label="Permalink to &quot;Transaction pool&quot;">​</a></h2><p>To find the current number of transactions in the transaction pool, the operator can run:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">txpool</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">txpool</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span></span></code></pre></div>',34),l=[n];function p(r,c,i,d,h,y){return a(),e("div",null,l)}const f=s(t,[["render",p]]);export{b as __pageData,f as default};
