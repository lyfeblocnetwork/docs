import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.1a91c06a.js";const u=JSON.parse('{"title":"Local Setup","description":"","frontmatter":{"id":"set-up-ibft-on-the-cloud","title":"Local Setup","head":[["meta",{"property":"og:title","content":"Local Setup | Lyfebloc Docs"}],["meta",{"property":"og:description","content":"Lyfebloc Network is a highly scalable modular blockchain powering dynamic applications with extensive full-stack adaptability."}]]},"headers":[],"relativePath":"get-started/environment.md","filePath":"get-started/environment.md","lastUpdated":1739729557000}'),e={name:"get-started/environment.md"},l=o(`<p>:::Caution This guide is for testing purposes only!</p><p>The below guide will instruct you on how to set up a Lyfebloc Network on your local machine for testing and development purposes.</p><p>The procedure differs greatly from the way you would want to set up Lyfebloc Network for a real use scenario on a cloud provider: <a href="/docs/get-started/set-up-ibft-locally">Cloud Setup</a> :::</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>Refer to <a href="/docs/get-started/installation">Installation</a> to install Lyfebloc Network.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>In this guide, our goal is to establish a working <code>lyfebloc-core</code> blockchain network working with <a href="https://github.com/ethereum/EIPs/issues/650" target="_blank" rel="noreferrer">IBFT consensus protocol</a>. The blockchain network will consist of 4 nodes of whom all 4 are validator nodes, and as such are eligible for both proposing block, and validating blocks that came from other proposers. All 4 nodes will run on the same machine, as the idea of this guide is to give you a fully functional IBFT cluster in the least amount of time.</p><p>To achieve that, we will guide you through 4 easy steps:</p><ol><li>Initializing data directories will generate both the validator keys for each of the 4 nodes, and initialize empty blockchain data directories. The validator keys are important as we need to bootstrap the genesis block with the initial set of validators using these keys.</li><li>Preparing the connection string for the bootnode will be the vital information for every node we will run as to which node to connect to when starting for the first time.</li><li>Generating the <code>genesis.json</code> file will require as input both the validator keys generated in <strong>step 1</strong> used for setting the initial validators of the network in the genesis block and the bootnode connection string from <strong>step 2</strong>.</li><li>Running all the nodes is the end goal of this guide and will be the last step we do, we will instruct the nodes which data directory to use and where to find the <code>genesis.json</code> which bootstraps the initial network state.</li></ol><p>As all four nodes will be running on localhost, during the setup process it is expected that all the data directories for each of the nodes are in the same parent directory.</p><div class="info custom-block"><p class="custom-block-title">Number of validators</p><p>There is no minimum to the number of nodes in a cluster, which means clusters with only 1 validator node are possible. Keep in mind that with a <em>single</em> node cluster, there is <strong>no crash tolerance</strong> and <strong>no BFT guarantee</strong>.</p><p>The minimum recommended number of nodes for achieving a BFT guarantee is 4 - since in a 4 node cluster, the failure of 1 node can be tolerated, with the remaining 3 functioning normally.</p></div><h2 id="step-1-initialize-data-folders-for-ibft-and-generate-validator-keys" tabindex="-1">Step 1: Initialize data folders for IBFT and generate validator keys <a class="header-anchor" href="#step-1-initialize-data-folders-for-ibft-and-generate-validator-keys" aria-label="Permalink to &quot;Step 1: Initialize data folders for IBFT and generate validator keys&quot;">​</a></h2><p>In order to get up and running with IBFT, you need to initialize the data folders, one for each node:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">secrets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test-chain-1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">secrets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test-chain-1</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">secrets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test-chain-2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">secrets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test-chain-2</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">secrets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test-chain-3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">secrets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test-chain-3</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">secrets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test-chain-4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">secrets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test-chain-4</span></span></code></pre></div><p>Each of these commands will print the validator key and the <a href="https://docs.libp2p.io/concepts/peer-id/" target="_blank" rel="noreferrer">node ID</a>. You will need the Node ID of the first node for the next step.</p><h2 id="step-2-prepare-the-multiaddr-connection-string-for-the-bootnode" tabindex="-1">Step 2: Prepare the multiaddr connection string for the bootnode <a class="header-anchor" href="#step-2-prepare-the-multiaddr-connection-string-for-the-bootnode" aria-label="Permalink to &quot;Step 2: Prepare the multiaddr connection string for the bootnode&quot;">​</a></h2><p>For a node to successfully establish connectivity, it must know which <code>bootnode</code> server to connect to in order to gain information about all the remaining nodes on the network. The <code>bootnode</code> is sometimes also known as the <code>rendezvous</code> server in p2p jargon.</p><p><code>bootnode</code> is not a special instance of the lyfebloc-core node. Every lyfebloc-core node can serve as a <code>bootnode</code>, but every lyfebloc-core node needs to have a set of bootnodes specified which will be contacted to provide information on how to connect with all remaining nodes in the network.</p><p>To create the connection string for specifying the bootnode, we will need to conform to the <a href="https://docs.libp2p.io/concepts/addressing/" target="_blank" rel="noreferrer">multiaddr format</a>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/ip4/&lt;ip_address&gt;/tcp/&lt;port&gt;/p2p/&lt;node_id&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/ip4/&lt;ip_address&gt;/tcp/&lt;port&gt;/p2p/&lt;node_id&gt;</span></span></code></pre></div><p>In this guide, we will treat the first and second nodes as the bootnodes for all other nodes. What will happen in this scenario is that nodes that connect to the <code>node 1</code> or <code>node 2</code> will get information on how to connect to one another through the mutually contacted bootnode.</p><div class="info custom-block"><p class="custom-block-title">You need to specify at least one bootnode to start a node</p><p>At least <strong>one</strong> bootnode is required, so other nodes in the network can discover each other. More bootnodes are recommended, as they provide resilience to the network in case of outages. In this guide we will list two nodes, but this can be changed on the fly, with no impact on the validity of the <code>genesis.json</code> file.</p></div><p>Since we are running on localhost, it is safe to assume that the <code>&lt;ip_address&gt;</code> is <code>127.0.0.1</code>.</p><p>For the <code>&lt;port&gt;</code> we will use <code>10001</code> since we will configure the libp2p server for <code>node 1</code> to listen on this port later.</p><p>And lastly, we need the <code>&lt;node_id&gt;</code> which we can get from the output of the previously ran command <code>lyfebloc-core secrets init --data-dir test-chain-1</code> command (which was used to generate keys and data directories for the <code>node1</code>)</p><p>After the assembly, the multiaddr connection string to the <code>node 1</code> which we will use as the bootnode will look something like this (only the <code>&lt;node_id&gt;</code> which is at the end should be different):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/ip4/127.0.0.1/tcp/10001/p2p/16Uiu2HAmJxxH1tScDX2rLGSU9exnuvZKNM9SoK3v315azp68DLPW</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/ip4/127.0.0.1/tcp/10001/p2p/16Uiu2HAmJxxH1tScDX2rLGSU9exnuvZKNM9SoK3v315azp68DLPW</span></span></code></pre></div><p>Similarly, we construct the multiaddr for second bootnode as shown below</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/ip4/127.0.0.1/tcp/20001/p2p/16Uiu2HAmS9Nq4QAaEiogE4ieJFUYsoH28magT7wSvJPpfUGBj3Hq</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/ip4/127.0.0.1/tcp/20001/p2p/16Uiu2HAmS9Nq4QAaEiogE4ieJFUYsoH28magT7wSvJPpfUGBj3Hq</span></span></code></pre></div><h2 id="step-3-generate-the-genesis-file-with-the-4-nodes-as-validators" tabindex="-1">Step 3: Generate the genesis file with the 4 nodes as validators <a class="header-anchor" href="#step-3-generate-the-genesis-file-with-the-4-nodes-as-validators" aria-label="Permalink to &quot;Step 3: Generate the genesis file with the 4 nodes as validators&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--consensus</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ibft</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--ibft-validators-prefix-path</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test-chain-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--bootnode</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/ip4/127.0.0.1/tcp/10001/p2p/16Uiu2HAmJxxH1tScDX2rLGSU9exnuvZKNM9SoK3v315azp68DLPW</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--bootnode</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/ip4/127.0.0.1/tcp/20001/p2p/16Uiu2HAmS9Nq4QAaEiogE4ieJFUYsoH28magT7wSvJPpfUGBj3Hq</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--consensus</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ibft</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--ibft-validators-prefix-path</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test-chain-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--bootnode</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/ip4/127.0.0.1/tcp/10001/p2p/16Uiu2HAmJxxH1tScDX2rLGSU9exnuvZKNM9SoK3v315azp68DLPW</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--bootnode</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/ip4/127.0.0.1/tcp/20001/p2p/16Uiu2HAmS9Nq4QAaEiogE4ieJFUYsoH28magT7wSvJPpfUGBj3Hq</span></span></code></pre></div><p>What this command does:</p><ul><li>The <code>--ibft-validators-prefix-path</code> sets the prefix folder path to the one specified which IBFT in Lyfebloc Network can use. This directory is used to house the <code>consensus/</code> folder, where the validator&#39;s private key is kept. The validator&#39;s public key is needed in order to build the genesis file - the initial list of bootstrap nodes. This flag only makes sense when setting up the network on localhost, as in a real-world scenario we cannot expect all the nodes&#39; data directories to be on the same filesystem from where we can easily read their public keys.</li><li>The <code>--bootnode</code> sets the address of the bootnode that will enable the nodes to find each other. We will use the multiaddr string of the <code>node 1</code>, as mentioned in <strong>step 2</strong>.</li></ul><p>The result of this command is the <code>genesis.json</code> file which contains the genesis block of our new blockchain, with the predefined validator set and the configuration for which node to contact first in order to establish connectivity.</p><div class="info custom-block"><p class="custom-block-title">Premining account balances</p><p>You will probably want to set up your blockchain network with some addresses having &quot;premined&quot; balances.</p><p>To achieve this, pass as many <code>--premine</code> flags as you want per address that you want to be initialized with a certain balance on the blockchain.</p><p>For example, if we would like to premine 1000 ETH to address <code>0x3956E90e632AEbBF34DEB49b71c28A83Bc029862</code> in our genesis block, then we would need to supply the following argument:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">--premine=0x3956E90e632AEbBF34DEB49b71c28A83Bc029862:1000000000000000000000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">--premine=0x3956E90e632AEbBF34DEB49b71c28A83Bc029862:1000000000000000000000</span></span></code></pre></div><p><strong>Note that the premined amount is in WEI, not ETH.</strong></p></div><div class="info custom-block"><p class="custom-block-title">Set the block gas limit</p><p>The default gas limit for each block is <code>5242880</code>. This value is written in the genesis file, but you may want to increase / decrease it.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	GenesisFileName       </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./genesis.json&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	DefaultChainName      </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;example&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	DefaultChainID        </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span></span>
<span class="line"><span style="color:#E1E4E8;">	DefaultPremineBalance </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0x3635C9ADC5DEA00000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	DefaultConsensus      </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;pow&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	GenesisGasUsed        </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">458752</span></span>
<span class="line"><span style="color:#E1E4E8;">	GenesisGasLimit       </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5242880</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// The default block gas limit</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	GenesisFileName       </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./genesis.json&quot;</span></span>
<span class="line"><span style="color:#24292E;">	DefaultChainName      </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;example&quot;</span></span>
<span class="line"><span style="color:#24292E;">	DefaultChainID        </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span></span>
<span class="line"><span style="color:#24292E;">	DefaultPremineBalance </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0x3635C9ADC5DEA00000&quot;</span></span>
<span class="line"><span style="color:#24292E;">	DefaultConsensus      </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;pow&quot;</span></span>
<span class="line"><span style="color:#24292E;">	GenesisGasUsed        </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">458752</span></span>
<span class="line"><span style="color:#24292E;">	GenesisGasLimit       </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5242880</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// The default block gas limit</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>To do so, you can use the flag <code>--block-gas-limit</code> followed by the desired value as shown below :</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">--block-gas-limit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000000000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">--block-gas-limit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000000000</span></span></code></pre></div></div><div class="info custom-block"><p class="custom-block-title">Set system file descriptor limit</p><p>The default file descriptor limit ( maximum number of open files ) on some operating systems is pretty small. If the nodes are expected to have high throughput, you might consider increasing this limit on the OS level.</p><p>For Ubuntu distro the procedure is as follows ( if you&#39;re not using Ubuntu/Debian distro, check the official docs for your OS ) :</p><ul><li>Check current os limits ( open files )</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ubuntu@ubuntu:~$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ulimit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-a</span></span>
<span class="line"><span style="color:#B392F0;">core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">          (blocks, </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;">) 0</span></span>
<span class="line"><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">seg</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">           (kbytes, </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;">) unlimited</span></span>
<span class="line"><span style="color:#B392F0;">scheduling</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">priority</span><span style="color:#E1E4E8;">             (-e) 0</span></span>
<span class="line"><span style="color:#B392F0;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">               (blocks, </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;">) unlimited</span></span>
<span class="line"><span style="color:#B392F0;">pending</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">signals</span><span style="color:#E1E4E8;">                 (-i) 15391</span></span>
<span class="line"><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">locked</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memory</span><span style="color:#E1E4E8;">       (kbytes, </span><span style="color:#79B8FF;">-l</span><span style="color:#E1E4E8;">) 65536</span></span>
<span class="line"><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memory</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">         (kbytes, </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;">) unlimited</span></span>
<span class="line"><span style="color:#B392F0;">open</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">files</span><span style="color:#E1E4E8;">                      (-n) 1024</span></span>
<span class="line"><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">            (512 </span><span style="color:#9ECBFF;">bytes,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;">) 8</span></span>
<span class="line"><span style="color:#B392F0;">POSIX</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">message</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">queues</span><span style="color:#E1E4E8;">     (bytes, </span><span style="color:#79B8FF;">-q</span><span style="color:#E1E4E8;">) 819200</span></span>
<span class="line"><span style="color:#B392F0;">real-time</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">priority</span><span style="color:#E1E4E8;">              (-r) 0</span></span>
<span class="line"><span style="color:#B392F0;">stack</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">              (kbytes, </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;">) 8192</span></span>
<span class="line"><span style="color:#B392F0;">cpu</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;">               (seconds, </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;">) unlimited</span></span>
<span class="line"><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">processes</span><span style="color:#E1E4E8;">              (-u) 15391</span></span>
<span class="line"><span style="color:#B392F0;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memory</span><span style="color:#E1E4E8;">          (kbytes, </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;">) unlimited</span></span>
<span class="line"><span style="color:#B392F0;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">locks</span><span style="color:#E1E4E8;">                      (-x) unlimited</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ubuntu@ubuntu:~$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ulimit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-a</span></span>
<span class="line"><span style="color:#6F42C1;">core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">          (blocks, </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;">) 0</span></span>
<span class="line"><span style="color:#6F42C1;">data</span><span style="color:#24292E;"> </span><span style="color:#032F62;">seg</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">           (kbytes, </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;">) unlimited</span></span>
<span class="line"><span style="color:#6F42C1;">scheduling</span><span style="color:#24292E;"> </span><span style="color:#032F62;">priority</span><span style="color:#24292E;">             (-e) 0</span></span>
<span class="line"><span style="color:#6F42C1;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">               (blocks, </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;">) unlimited</span></span>
<span class="line"><span style="color:#6F42C1;">pending</span><span style="color:#24292E;"> </span><span style="color:#032F62;">signals</span><span style="color:#24292E;">                 (-i) 15391</span></span>
<span class="line"><span style="color:#6F42C1;">max</span><span style="color:#24292E;"> </span><span style="color:#032F62;">locked</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memory</span><span style="color:#24292E;">       (kbytes, </span><span style="color:#005CC5;">-l</span><span style="color:#24292E;">) 65536</span></span>
<span class="line"><span style="color:#6F42C1;">max</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memory</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">         (kbytes, </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;">) unlimited</span></span>
<span class="line"><span style="color:#6F42C1;">open</span><span style="color:#24292E;"> </span><span style="color:#032F62;">files</span><span style="color:#24292E;">                      (-n) 1024</span></span>
<span class="line"><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">            (512 </span><span style="color:#032F62;">bytes,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;">) 8</span></span>
<span class="line"><span style="color:#6F42C1;">POSIX</span><span style="color:#24292E;"> </span><span style="color:#032F62;">message</span><span style="color:#24292E;"> </span><span style="color:#032F62;">queues</span><span style="color:#24292E;">     (bytes, </span><span style="color:#005CC5;">-q</span><span style="color:#24292E;">) 819200</span></span>
<span class="line"><span style="color:#6F42C1;">real-time</span><span style="color:#24292E;"> </span><span style="color:#032F62;">priority</span><span style="color:#24292E;">              (-r) 0</span></span>
<span class="line"><span style="color:#6F42C1;">stack</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">              (kbytes, </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;">) 8192</span></span>
<span class="line"><span style="color:#6F42C1;">cpu</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;">               (seconds, </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;">) unlimited</span></span>
<span class="line"><span style="color:#6F42C1;">max</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user</span><span style="color:#24292E;"> </span><span style="color:#032F62;">processes</span><span style="color:#24292E;">              (-u) 15391</span></span>
<span class="line"><span style="color:#6F42C1;">virtual</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memory</span><span style="color:#24292E;">          (kbytes, </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;">) unlimited</span></span>
<span class="line"><span style="color:#6F42C1;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">locks</span><span style="color:#24292E;">                      (-x) unlimited</span></span></code></pre></div><ul><li>Increase open files limit <ul><li>Localy - affects only current session:</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">ulimit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-u</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">65535</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">ulimit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-u</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">65535</span></span></code></pre></div><ul><li>Globaly or per user ( add limits at the end of /etc/security/limits.conf file ) :</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/security/limits.conf</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># we use vi, but you can use your favorite text editor</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/security/limits.conf</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># we use vi, but you can use your favorite text editor</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># /etc/security/limits.conf</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#Each line describes a limit for a user in the form:</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt;        &lt;type&gt;  &lt;item&gt;  &lt;value&gt;</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#Where:</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt; can be:</span></span>
<span class="line"><span style="color:#6A737D;">#        - a user name</span></span>
<span class="line"><span style="color:#6A737D;">#        - a group name, with @group syntax</span></span>
<span class="line"><span style="color:#6A737D;">#        - the wildcard *, for default entry</span></span>
<span class="line"><span style="color:#6A737D;">#        - the wildcard %, can be also used with %group syntax,</span></span>
<span class="line"><span style="color:#6A737D;">#                 for maxlogin limit</span></span>
<span class="line"><span style="color:#6A737D;">#        - NOTE: group and wildcard limits are not applied to root.</span></span>
<span class="line"><span style="color:#6A737D;">#          To apply a limit to the root user, &lt;domain&gt; must be</span></span>
<span class="line"><span style="color:#6A737D;">#          the literal username root.</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;type&gt; can have the two values:</span></span>
<span class="line"><span style="color:#6A737D;">#        - &quot;soft&quot; for enforcing the soft limits</span></span>
<span class="line"><span style="color:#6A737D;">#        - &quot;hard&quot; for enforcing hard limits</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;item&gt; can be one of the following:</span></span>
<span class="line"><span style="color:#6A737D;">#        - core - limits the core file size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - data - max data size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - fsize - maximum filesize (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - memlock - max locked-in-memory address space (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nofile - max number of open file descriptors</span></span>
<span class="line"><span style="color:#6A737D;">#        - rss - max resident set size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - stack - max stack size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - cpu - max CPU time (MIN)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nproc - max number of processes</span></span>
<span class="line"><span style="color:#6A737D;">#        - as - address space limit (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - maxlogins - max number of logins for this user</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#        - maxsyslogins - max number of logins on the system</span></span>
<span class="line"><span style="color:#6A737D;">#        - priority - the priority to run user process with</span></span>
<span class="line"><span style="color:#6A737D;">#        - locks - max number of file locks the user can hold</span></span>
<span class="line"><span style="color:#6A737D;">#        - sigpending - max number of pending signals</span></span>
<span class="line"><span style="color:#6A737D;">#        - msgqueue - max memory used by POSIX message queues (bytes)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nice - max nice priority allowed to raise to values: [-20, 19]</span></span>
<span class="line"><span style="color:#6A737D;">#        - rtprio - max realtime priority</span></span>
<span class="line"><span style="color:#6A737D;">#        - chroot - change root to directory (Debian-specific)</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt;      &lt;type&gt;  &lt;item&gt;         &lt;value&gt;</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#*               soft    core            0</span></span>
<span class="line"><span style="color:#6A737D;">#root            hard    core            100000</span></span>
<span class="line"><span style="color:#6A737D;">#*               hard    rss             10000</span></span>
<span class="line"><span style="color:#6A737D;">#@student        hard    nproc           20</span></span>
<span class="line"><span style="color:#6A737D;">#@faculty        soft    nproc           20</span></span>
<span class="line"><span style="color:#6A737D;">#@faculty        hard    nproc           50</span></span>
<span class="line"><span style="color:#6A737D;">#ftp             hard    nproc           0</span></span>
<span class="line"><span style="color:#6A737D;">#ftp             -       chroot          /ftp</span></span>
<span class="line"><span style="color:#6A737D;">#@student        -       maxlogins       4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">               soft    nofile          65535</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">               hard    nofile          65535</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># End of file</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># /etc/security/limits.conf</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#Each line describes a limit for a user in the form:</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt;        &lt;type&gt;  &lt;item&gt;  &lt;value&gt;</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#Where:</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt; can be:</span></span>
<span class="line"><span style="color:#6A737D;">#        - a user name</span></span>
<span class="line"><span style="color:#6A737D;">#        - a group name, with @group syntax</span></span>
<span class="line"><span style="color:#6A737D;">#        - the wildcard *, for default entry</span></span>
<span class="line"><span style="color:#6A737D;">#        - the wildcard %, can be also used with %group syntax,</span></span>
<span class="line"><span style="color:#6A737D;">#                 for maxlogin limit</span></span>
<span class="line"><span style="color:#6A737D;">#        - NOTE: group and wildcard limits are not applied to root.</span></span>
<span class="line"><span style="color:#6A737D;">#          To apply a limit to the root user, &lt;domain&gt; must be</span></span>
<span class="line"><span style="color:#6A737D;">#          the literal username root.</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;type&gt; can have the two values:</span></span>
<span class="line"><span style="color:#6A737D;">#        - &quot;soft&quot; for enforcing the soft limits</span></span>
<span class="line"><span style="color:#6A737D;">#        - &quot;hard&quot; for enforcing hard limits</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;item&gt; can be one of the following:</span></span>
<span class="line"><span style="color:#6A737D;">#        - core - limits the core file size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - data - max data size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - fsize - maximum filesize (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - memlock - max locked-in-memory address space (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nofile - max number of open file descriptors</span></span>
<span class="line"><span style="color:#6A737D;">#        - rss - max resident set size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - stack - max stack size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - cpu - max CPU time (MIN)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nproc - max number of processes</span></span>
<span class="line"><span style="color:#6A737D;">#        - as - address space limit (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - maxlogins - max number of logins for this user</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#        - maxsyslogins - max number of logins on the system</span></span>
<span class="line"><span style="color:#6A737D;">#        - priority - the priority to run user process with</span></span>
<span class="line"><span style="color:#6A737D;">#        - locks - max number of file locks the user can hold</span></span>
<span class="line"><span style="color:#6A737D;">#        - sigpending - max number of pending signals</span></span>
<span class="line"><span style="color:#6A737D;">#        - msgqueue - max memory used by POSIX message queues (bytes)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nice - max nice priority allowed to raise to values: [-20, 19]</span></span>
<span class="line"><span style="color:#6A737D;">#        - rtprio - max realtime priority</span></span>
<span class="line"><span style="color:#6A737D;">#        - chroot - change root to directory (Debian-specific)</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt;      &lt;type&gt;  &lt;item&gt;         &lt;value&gt;</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#*               soft    core            0</span></span>
<span class="line"><span style="color:#6A737D;">#root            hard    core            100000</span></span>
<span class="line"><span style="color:#6A737D;">#*               hard    rss             10000</span></span>
<span class="line"><span style="color:#6A737D;">#@student        hard    nproc           20</span></span>
<span class="line"><span style="color:#6A737D;">#@faculty        soft    nproc           20</span></span>
<span class="line"><span style="color:#6A737D;">#@faculty        hard    nproc           50</span></span>
<span class="line"><span style="color:#6A737D;">#ftp             hard    nproc           0</span></span>
<span class="line"><span style="color:#6A737D;">#ftp             -       chroot          /ftp</span></span>
<span class="line"><span style="color:#6A737D;">#@student        -       maxlogins       4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">               soft    nofile          65535</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">               hard    nofile          65535</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># End of file</span></span></code></pre></div>Optionaly, modify additional parameters, save the file and restart the system. After restart check file descriptor limit again. It should be set to the value you defined in limits.conf file.</li></ul></div><h2 id="step-4-run-all-the-clients" tabindex="-1">Step 4: Run all the clients <a class="header-anchor" href="#step-4-run-all-the-clients" aria-label="Permalink to &quot;Step 4: Run all the clients&quot;">​</a></h2><p>Because we are attempting to run a Lyfebloc Network consisting of 4 nodes all on the same machine, we need to take care to avoid port conflicts. This is why we will use the following reasoning for determining the listening ports of each server of a node:</p><ul><li><code>10000</code> for the gRPC server of <code>node 1</code>, <code>20000</code> for the GRPC server of <code>node 2</code>, etc.</li><li><code>10001</code> for the libp2p server of <code>node 1</code>, <code>20001</code> for the libp2p server of <code>node 2</code>, etc.</li><li><code>10002</code> for the JSON-RPC server of <code>node 1</code>, <code>20002</code> for the JSON-RPC server of <code>node 2</code>, etc.</li></ul><p>To run the <strong>first</strong> client (note the port <code>10001</code> since it was used as a part of the libp2p multiaddr in <strong>step 2</strong> alongside node 1&#39;s Node ID):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./test-chain-1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis.json</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--grpc-address</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:10000</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:10001</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--jsonrpc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:10002</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--seal</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./test-chain-1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis.json</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--grpc-address</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:10000</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:10001</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--jsonrpc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:10002</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--seal</span></span></code></pre></div><p>To run the <strong>second</strong> client:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./test-chain-2</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis.json</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--grpc-address</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:20000</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:20001</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--jsonrpc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:20002</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--seal</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./test-chain-2</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis.json</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--grpc-address</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:20000</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:20001</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--jsonrpc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:20002</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--seal</span></span></code></pre></div><p>To run the <strong>third</strong> client:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./test-chain-3</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis.json</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--grpc-address</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:30000</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:30001</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--jsonrpc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:30002</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--seal</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./test-chain-3</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis.json</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--grpc-address</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:30000</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:30001</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--jsonrpc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:30002</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--seal</span></span></code></pre></div><p>To run the <strong>fourth</strong> client:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./test-chain-4</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis.json</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--grpc-address</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:40000</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:40001</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--jsonrpc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:40002</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--seal</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./test-chain-4</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis.json</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--grpc-address</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:40000</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:40001</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--jsonrpc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:40002</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--seal</span></span></code></pre></div><p>To briefly go over what has been done so far:</p><ul><li>The directory for the client data has been specified to be <strong>./test-chain-*</strong></li><li>The GRPC servers have been started on ports <strong>10000</strong>, <strong>20000</strong>, <strong>30000</strong> and <strong>40000</strong>, for each node respectively</li><li>The libp2p servers have been started on ports <strong>10001</strong>, <strong>20001</strong>, <strong>30001</strong> and <strong>40001</strong>, for each node respectively</li><li>The JSON-RPC servers have been started on ports <strong>10002</strong>, <strong>20002</strong>, <strong>30002</strong> and <strong>40002</strong>, for each node respectively</li><li>The <em>seal</em> flag means that the node which is being started is going to participate in block sealing</li><li>The <em>chain</em> flag specifies which genesis file should be used for chain configuration</li></ul><p>The structure of the genesis file is covered in the <a href="/docs/get-started/cli-commands">CLI Commands</a> section.</p><p>After running the previous commands, you have set up a 4 node Lyfebloc Network, capable of sealing blocks and recovering from node failure.</p><div class="info custom-block"><p class="custom-block-title">Start the client using config file</p><p>Instead of specifying all configuration parameters as CLI arguments, the Client can also be started using a config file by executing the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--config</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">config_file_pat</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--config</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">config_file_pat</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>Example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./test/config-node1.json</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./test/config-node1.json</span></span></code></pre></div><p>Currently, we only support <code>json</code> based configuration file, sample config file can be found <a href="/docs/configuration/sample-config">here</a></p></div><div class="info custom-block"><p class="custom-block-title">Steps to run a non-validator node</p><p>A Non-validator will always sync the latest blocks received from the validator node, you can start a non-validator node by running the following command.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">directory_pat</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">genesis_filenam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--grpc-address</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">portN</span><span style="color:#E1E4E8;">o</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">portN</span><span style="color:#E1E4E8;">o</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--jsonrpc</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">portN</span><span style="color:#E1E4E8;">o</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">directory_pat</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">genesis_filenam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--grpc-address</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">portN</span><span style="color:#24292E;">o</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">portN</span><span style="color:#24292E;">o</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--jsonrpc</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">portN</span><span style="color:#24292E;">o</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>For example, you can add <strong>fifth</strong> Non-validator client by executing the following command :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./test-chain</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis.json</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--grpc-address</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:50000</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:50001</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--jsonrpc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:50002</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./test-chain</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis.json</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--grpc-address</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:50000</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:50001</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--jsonrpc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:50002</span></span></code></pre></div></div><div class="info custom-block"><p class="custom-block-title">Specify the price limit</p><p>A Lyfebloc Network node can be started with a set <strong>price limit</strong> for incoming transactions.</p><p>The unit for the price limit is <code>wei</code>.</p><p>Setting a price limit means that any transaction processed by the current node will need to have a gas price <strong>higher</strong> then the set price limit, otherwise it will not be included in a block.</p><p>Having the majority of nodes respect a certain price limit enforces the rule that transactions in the network cannot be below a certain price threshold.</p><p>The default value for the price limit is <code>0</code>, meaning it is not enforced at all by default.</p><p>Example of using the <code>--price-limit</code> flag:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--price-limit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--price-limit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span></span></code></pre></div><p>It is worth noting that price limits <strong>are enforced only on non-local transactions</strong>, meaning that the price limit does not apply to transactions added locally on the node.</p></div><h2 id="step-5-interact-with-lyfebloc-network" tabindex="-1">Step 5: Interact with Lyfebloc Network <a class="header-anchor" href="#step-5-interact-with-lyfebloc-network" aria-label="Permalink to &quot;Step 5: Interact with Lyfebloc Network&quot;">​</a></h2><p>Now that you&#39;ve set up at least 1 running client, you can go ahead and interact with the blockchain using the account you premined above and by specifying the JSON-RPC URL to any of the 4 nodes:</p><ul><li>Node 1: <code>http://localhost:10002</code></li><li>Node 2: <code>http://localhost:20002</code></li><li>Node 3: <code>http://localhost:30002</code></li><li>Node 4: <code>http://localhost:40002</code></li></ul><p>Follow this guide to issue operator commands to the newly built cluster: <a href="/docs/working-with-node/query-operator-info">How to query operator information</a> (the GRPC ports for the cluster we have built are <code>10000</code>/<code>20000</code>/<code>30000</code>/<code>40000</code> for each node respectively)</p>`,62),p=[l];function t(c,r,i,y,d,E){return a(),n("div",null,p)}const g=s(e,[["render",t]]);export{u as __pageData,g as default};
