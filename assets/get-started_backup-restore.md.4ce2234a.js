import{_ as e,o as t,c as a,Q as o}from"./chunks/framework.1a91c06a.js";const b=JSON.parse('{"title":"Backup/restore node instance","description":"","frontmatter":{"id":"backup-restore","title":"Backup/restore node instance","head":[["meta",{"property":"og:title","content":"Backup/restore node instance | Lyfebloc Docs"}],["meta",{"property":"og:description","content":"Lyfebloc Network is a highly scalable modular blockchain powering dynamic applications with extensive full-stack adaptability."}]]},"headers":[],"relativePath":"get-started/backup-restore.md","filePath":"get-started/backup-restore.md","lastUpdated":1739729557000}'),s={name:"get-started/backup-restore.md"},n=o('<h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>This guide goes into detail on how to back up and restore a Lyfebloc Network node instance. It covers the base folders and what they contain, as well as which files are critical for performing a successful backup and restore.</p><h2 id="base-folders" tabindex="-1">Base folders <a class="header-anchor" href="#base-folders" aria-label="Permalink to &quot;Base folders&quot;">​</a></h2><p>Lyfebloc Network leverages LevelDB as its storage engine. When starting a Lyfebloc Network node, the following sub-folders are created in the specified working directory:</p><ul><li><strong>blockchain</strong> - Stores the blockchain data</li><li><strong>trie</strong> - Stores the Merkle tries (world state data)</li><li><strong>keystore</strong> - Stores private keys for the client. This includes the libp2p private key and the sealing/validator private key</li><li><strong>consensus</strong> - Stores any consensus information that the client might need while working. For now, it stores the node&#39;s <em>private validator key</em></li></ul><p>It is critical for these folders to be preserved in order for Lyfebloc Network instance to run smoothly.</p><h2 id="creating-and-restoring-node-backups" tabindex="-1">Creating and restoring node backups <a class="header-anchor" href="#creating-and-restoring-node-backups" aria-label="Permalink to &quot;Creating and restoring node backups&quot;">​</a></h2><p>This section guides you through creating archive data of the blockchain in a running node and restoring it in another instance.</p><h3 id="backup" tabindex="-1">Backup <a class="header-anchor" href="#backup" aria-label="Permalink to &quot;Backup&quot;">​</a></h3><p><code>backup</code> command fetches blocks from a running node by gRPC and generates an archive file. If <code>--from</code> and <code>--to</code> are not given in the command, this command will fetch blocks from genesis to latest.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">backup</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--grpc-address</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">127.0</span><span style="color:#9ECBFF;">.0.1:9632</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--out</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">backup.dat</span><span style="color:#E1E4E8;"> [--from </span><span style="color:#79B8FF;">0x0</span><span style="color:#9ECBFF;">]</span><span style="color:#E1E4E8;"> [--to </span><span style="color:#79B8FF;">0x100</span><span style="color:#9ECBFF;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">backup</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--grpc-address</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">127.0</span><span style="color:#032F62;">.0.1:9632</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--out</span><span style="color:#24292E;"> </span><span style="color:#032F62;">backup.dat</span><span style="color:#24292E;"> [--from </span><span style="color:#005CC5;">0x0</span><span style="color:#032F62;">]</span><span style="color:#24292E;"> [--to </span><span style="color:#005CC5;">0x100</span><span style="color:#032F62;">]</span></span></code></pre></div><h3 id="restore" tabindex="-1">Restore <a class="header-anchor" href="#restore" aria-label="Permalink to &quot;Restore&quot;">​</a></h3><p>A server imports blocks from an archive at the start when starting with <code>--restore</code> flag. Please make sure that there is a key for new node. To find out more about importing or generating keys, visit the <a href="/docs/configuration/secret-managers/set-up-aws-ssm">Secret Managers section</a>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--restore</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">archive.dat</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--restore</span><span style="color:#24292E;"> </span><span style="color:#032F62;">archive.dat</span></span></code></pre></div><h2 id="back-up-restore-whole-data" tabindex="-1">Back up/Restore Whole data <a class="header-anchor" href="#back-up-restore-whole-data" aria-label="Permalink to &quot;Back up/Restore Whole data&quot;">​</a></h2><p>This section guides you through backup the data including state data and key and restoring into the new instance.</p><h3 id="step-1-stop-the-running-client" tabindex="-1">Step 1: Stop the running client <a class="header-anchor" href="#step-1-stop-the-running-client" aria-label="Permalink to &quot;Step 1: Stop the running client&quot;">​</a></h3><p>Since Lyfebloc Network uses <strong>LevelDB</strong> for data storage, the node needs to be stopped for the duration of the backup, as <strong>LevelDB</strong> doesn&#39;t allow for concurrent access to its database files.</p><p>Additionally, Lyfebloc Network also does data flushing on close.</p><p>The first step involves stopping the running client (either through a service manager or some other mechanism that sends a SIGINT signal to the process), so it can trigger 2 events while gracefully shutting down:</p><ul><li>Running data flush to disk</li><li>Release of the DB files lock by LevelDB</li></ul><h3 id="step-2-backup-the-directory" tabindex="-1">Step 2: Backup the directory <a class="header-anchor" href="#step-2-backup-the-directory" aria-label="Permalink to &quot;Step 2: Backup the directory&quot;">​</a></h3><p>Now that the client is not running, the data directory can be backed up to another medium. Keep in mind that the files with a <code>.key</code> extension contain the private key data that can be used to impersonate the current node, and they should never be shared with a third/unknown party.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Please back up and restore the generated <code>genesis</code> file manually, so the restored node is fully operational.</p></div><h2 id="restore-1" tabindex="-1">Restore <a class="header-anchor" href="#restore-1" aria-label="Permalink to &quot;Restore&quot;">​</a></h2><h3 id="step-1-stop-the-running-client-1" tabindex="-1">Step 1: Stop the running client <a class="header-anchor" href="#step-1-stop-the-running-client-1" aria-label="Permalink to &quot;Step 1: Stop the running client&quot;">​</a></h3><p>If any instance of Lyfebloc Network is running, it needs to be stopped in order for step 2 to be successful.</p><h3 id="step-2-copy-the-backed-up-data-directory-to-the-desired-folder" tabindex="-1">Step 2: Copy the backed up data directory to the desired folder <a class="header-anchor" href="#step-2-copy-the-backed-up-data-directory-to-the-desired-folder" aria-label="Permalink to &quot;Step 2: Copy the backed up data directory to the desired folder&quot;">​</a></h3><p>Once the client is not running, the data directory which was previously backed up can be copied over to the desired folder. Additionally, restore the previously copied <code>genesis</code> file.</p><h3 id="step-3-run-lyfebloc-network-client-while-specifying-the-correct-data-directory" tabindex="-1">Step 3: Run Lyfebloc Network client while specifying the correct data directory <a class="header-anchor" href="#step-3-run-lyfebloc-network-client-while-specifying-the-correct-data-directory" aria-label="Permalink to &quot;Step 3: Run Lyfebloc Network client while specifying the correct data directory&quot;">​</a></h3><p>In order for Lyfebloc Network to use the restored data directory, at launch, the user needs to specify the path to the data directory. Please consult the <a href="/docs/get-started/cli-commands">CLI Commands</a> section on information regarding the <code>data-dir</code> flag.</p>',31),r=[n];function l(c,i,p,d,h,u){return t(),a("div",null,r)}const g=e(s,[["render",l]]);export{b as __pageData,g as default};
