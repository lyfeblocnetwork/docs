import{_ as e,o as a,c as t,Q as o}from"./chunks/framework.1a91c06a.js";const f=JSON.parse('{"title":"Manage private keys","description":"","frontmatter":{"id":"manage-private-keys","title":"Manage private keys","head":[["meta",{"property":"og:title","content":"Manage private keys | Lyfebloc Docs"}],["meta",{"property":"og:description","content":"Lyfebloc Network is a highly scalable modular blockchain powering dynamic applications with extensive full-stack adaptability."}]]},"headers":[],"relativePath":"get-started/private-keys.md","filePath":"get-started/private-keys.md","lastUpdated":1739729557000}'),s={name:"get-started/private-keys.md"},n=o(`<h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Lyfebloc Network has two types of private keys that it directly manages:</p><ul><li><strong>Private key used for the consensus mechanism</strong></li><li><strong>Private key used for networking by libp2p</strong></li></ul><p>Currently, Lyfebloc Network doesn&#39;t offer support for direct account management.</p><p>Based on the directory structure outlined in the <a href="/docs/working-with-node/backup-restore">Backup &amp; Restore guide</a>, Lyfebloc Network stores these mentioned key files in two distinct directories - <strong>consensus</strong> and <strong>keystore</strong>.</p><h2 id="key-format" tabindex="-1">Key format <a class="header-anchor" href="#key-format" aria-label="Permalink to &quot;Key format&quot;">​</a></h2><p>The private keys are stored in simple <strong>Base64 format</strong>, so they can be human-readable and portable.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># Example private key</span></span>
<span class="line"><span style="color:#B392F0;">0802122068a1bdb1c8af5333e58fe586bc0e9fc7aff882da82affb678aef5d9a2b9100c0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># Example private key</span></span>
<span class="line"><span style="color:#6F42C1;">0802122068a1bdb1c8af5333e58fe586bc0e9fc7aff882da82affb678aef5d9a2b9100c0</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Key Type</p><p>All private key files generated and used inside Lyfebloc Network are relying on ECDSA with the curve <a href="https://en.bitcoin.it/wiki/Secp256k1" target="_blank" rel="noreferrer">secp256k1</a>.</p><p>As the curve is non-standard, it cannot be encoded and stored in any standardized PEM format. Importing keys that don&#39;t conform to this key type is not supported.</p></div><h2 id="consensus-private-key" tabindex="-1">Consensus Private Key <a class="header-anchor" href="#consensus-private-key" aria-label="Permalink to &quot;Consensus Private Key&quot;">​</a></h2><p>The private key file mentioned as the <em>consensus private key</em> is also referred to as the <strong>validator private key</strong>. This private key is used when the node is acting as a validator in the network and needs to sign new data.</p><p>The private key file is located in <code>consensus/validator.key</code>, and adheres to the <a href="/docs/configuration/manage-private-keys#key-format">key format</a> mentioned.</p><h2 id="networking-private-key" tabindex="-1">Networking Private Key <a class="header-anchor" href="#networking-private-key" aria-label="Permalink to &quot;Networking Private Key&quot;">​</a></h2><p>The private key file mentioned for networking is used by libp2p to generate the corresponding PeerID, and allow the node to participate in the network.</p><p>It is located in <code>keystore/libp2p.key</code>, and adheres to the <a href="/docs/configuration/manage-private-keys#key-format">key format</a> mentioned.</p><h2 id="import-export" tabindex="-1">Import / Export <a class="header-anchor" href="#import-export" aria-label="Permalink to &quot;Import / Export&quot;">​</a></h2><p>As the key files are stored in simple Base64 on disk, they can be easily backed up or imported.</p><p>:::caution Changing the key files Any kind of change made to the key files on an already set up / running network can lead to serious network/consensus disruption, since the consensus and peer discovery mechanisms store the data derived from these keys in node-specific storage, and rely on this data to initiate connections and perform consensus logic :::</p>`,18),r=[n];function i(p,d,c,l,h,y){return a(),t("div",null,r)}const m=e(s,[["render",i]]);export{f as __pageData,m as default};
