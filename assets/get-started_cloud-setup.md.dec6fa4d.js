import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.1a91c06a.js";const e="/img/ibft-setup.svg",g=JSON.parse('{"title":"Cloud Setup","description":"","frontmatter":{"id":"set-up-ibft-on-the-cloud","title":"Cloud Setup","head":[["meta",{"property":"og:title","content":"Cloud Setup | Lyfebloc Docs"}],["meta",{"property":"og:description","content":"Lyfebloc Network is a highly scalable modular blockchain powering dynamic applications with extensive full-stack adaptability."}]]},"headers":[],"relativePath":"get-started/cloud-setup.md","filePath":"get-started/cloud-setup.md","lastUpdated":1739729557000}'),l={name:"get-started/cloud-setup.md"},p=o('<div class="info custom-block"><p class="custom-block-title">This guide is for mainnet or testnet setups</p><p>The below guide will instruct you on how to set up a Lyfebloc Network network on a cloud provider for a production setup of your testnet or mainnet.</p><p>If you would like to setup a Lyfebloc Network network locally to quickly test the <code>lyfebloc-core</code> before doing a production-like setup, please refer to <a href="/docs/get-started/set-up-ibft-locally">Local Setup</a></p></div><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>Refer to <a href="/docs/get-started/installation">Installation</a> to install Lyfebloc Network.</p><h3 id="setting-up-the-vm-connectivity" tabindex="-1">Setting up the VM connectivity <a class="header-anchor" href="#setting-up-the-vm-connectivity" aria-label="Permalink to &quot;Setting up the VM connectivity&quot;">​</a></h3><p>Depending on your choice of cloud provider, you may set up connectivity and rules between the VMs using a firewall, security groups, or access control lists.</p><p>As the only part of the <code>lyfebloc-core</code> that needs to be exposed to other VMs is the libp2p server, simply allowing all communication between VMs on the default libp2p port <code>1478</code> is enough.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p><img src="'+e+`" alt="Cloud setup"></p><p>In this guide, our goal is to establish a working <code>lyfebloc-core</code> blockchain network working with <a href="https://github.com/ethereum/EIPs/issues/650" target="_blank" rel="noreferrer">IBFT consensus protocol</a>. The blockchain network will consist of 4 nodes of whom all 4 are validator nodes, and as such are eligible for both proposing block, and validating blocks that came from other proposers. Each of the 4 nodes will run on their own VM, as the idea of this guide is to give you a fully functional Lyfebloc Network network while keeping the validator keys private to ensure a trustless network setup.</p><p>To achieve that, we will guide you through 4 easy steps:</p><ol start="0"><li>Take a look at the list of <strong>Requirements</strong> above</li><li>Generate the private keys for each of the validators, and initialize the data directory</li><li>Prepare the connection string for the bootnode to be put into the shared <code>genesis.json</code></li><li>Create the <code>genesis.json</code> on your local machine, and send/transfer it to each of the nodes</li><li>Start all the nodes</li></ol><div class="info custom-block"><p class="custom-block-title">Number of validators</p><p>There is no minimum to the number of nodes in a cluster, which means clusters with only 1 validator node are possible. Keep in mind that with a <em>single</em> node cluster, there is <strong>no crash tolerance</strong> and <strong>no BFT guarantee</strong>.</p><p>The minimum recommended number of nodes for achieving a BFT guarantee is 4 - since in a 4 node cluster, the failure of 1 node can be tolerated, with the remaining 3 functioning normally.</p></div><h2 id="step-1-initialize-data-folders-and-generate-validator-keys" tabindex="-1">Step 1: Initialize data folders and generate validator keys <a class="header-anchor" href="#step-1-initialize-data-folders-and-generate-validator-keys" aria-label="Permalink to &quot;Step 1: Initialize data folders and generate validator keys&quot;">​</a></h2><p>To get up and running with Lyfebloc Network, you need to initialize the data folders, on each node:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">node-1&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">secrets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">data-dir</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">node-1&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">secrets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">data-dir</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">node-2&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">secrets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">data-dir</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">node-2&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">secrets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">data-dir</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">node-3&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">secrets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">data-dir</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">node-3&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">secrets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">data-dir</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">node-4&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">secrets</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">data-dir</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">node-4&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">secrets</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">data-dir</span></span></code></pre></div><p>Each of these commands will print the <a href="https://docs.libp2p.io/concepts/peer-id/" target="_blank" rel="noreferrer">node ID</a>. You will need that information for the next step.</p><div class="warning custom-block"><p class="custom-block-title">Keep your data directory to yourself!</p><p>The data directories generated above, besides initializing the directories for holding the blockchain state, will also generate your validator&#39;s private keys. <strong>This key should be kept as a secret, as stealing it would render somebody capable of impersonating you as the validator in the network!</strong></p></div><h2 id="step-2-prepare-the-multiaddr-connection-string-for-the-bootnode" tabindex="-1">Step 2: Prepare the multiaddr connection string for the bootnode <a class="header-anchor" href="#step-2-prepare-the-multiaddr-connection-string-for-the-bootnode" aria-label="Permalink to &quot;Step 2: Prepare the multiaddr connection string for the bootnode&quot;">​</a></h2><p>For a node to successfully establish connectivity, it must know which <code>bootnode</code> server to connect to gain information about all the remaining nodes on the network. The <code>bootnode</code> is sometimes also known as the <code>rendezvous</code> server in p2p jargon.</p><p><code>bootnode</code> is not a special instance of a Lyfebloc Network node. Every Lyfebloc Network node can serve as a <code>bootnode</code> and every Lyfebloc Network node needs to have a set of bootnodes specified which will be contacted to provide information on how to connect with all remaining nodes in the network.</p><p>To create the connection string for specifying the bootnode, we will need to conform to the <a href="https://docs.libp2p.io/concepts/addressing/" target="_blank" rel="noreferrer">multiaddr format</a>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/ip4/&lt;ip_address&gt;/tcp/&lt;port&gt;/p2p/&lt;node_id&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/ip4/&lt;ip_address&gt;/tcp/&lt;port&gt;/p2p/&lt;node_id&gt;</span></span></code></pre></div><p>In this guide, we will treat the first and second nodes as the bootnodes for all other nodes. What will happen in this scenario is that nodes that connect to the <code>node 1</code> or <code>node 2</code> will get information on how to connect to one another through the mutually contacted bootnode.</p><div class="info custom-block"><p class="custom-block-title">You need to specify at least one bootnode to start a node</p><p>At least <strong>one</strong> bootnode is required, so other nodes in the network can discover each other. More bootnodes are recommended, as they provide resilience to the network in case of outages. In this guide we will list two nodes, but this can be changed on the fly, with no impact on the validity of the <code>genesis.json</code> file.</p></div><p>As the first part of the multiaddr connection string is the <code>&lt;ip_address&gt;</code>, here you will need to enter the IP address as reachable by other nodes, depending on your setup this might be a private or a public IP address, not <code>127.0.0.1</code>.</p><p>For the <code>&lt;port&gt;</code> we will use <code>1478</code>, since it is the default libp2p port.</p><p>And lastly, we need the <code>&lt;node_id&gt;</code> which we can get from the output of the previously ran command <code>lyfebloc-core secrets init --data-dir data-dir</code> command (which was used to generate keys and data directories for the <code>node 1</code>)</p><p>After the assembly, the multiaddr connection string to the <code>node 1</code> which we will use as the bootnode will look something like this (only the <code>&lt;node_id&gt;</code> which is at the end should be different):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/ip4/&lt;public_or_private_ip&gt;/tcp/1478/p2p/16Uiu2HAmJxxH1tScDX2rLGSU9exnuvZKNM9SoK3v315azp68DLPW</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/ip4/&lt;public_or_private_ip&gt;/tcp/1478/p2p/16Uiu2HAmJxxH1tScDX2rLGSU9exnuvZKNM9SoK3v315azp68DLPW</span></span></code></pre></div><p>Similarly, we construct multiaddr for the second bootnode as shown below</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/ip4/&lt;public_or_private_ip&gt;/tcp/1478/p2p/16Uiu2HAmS9Nq4QAaEiogE4ieJFUYsoH28magT7wSvJPpfUGBj3Hq</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/ip4/&lt;public_or_private_ip&gt;/tcp/1478/p2p/16Uiu2HAmS9Nq4QAaEiogE4ieJFUYsoH28magT7wSvJPpfUGBj3Hq</span></span></code></pre></div><h2 id="step-3-generate-the-genesis-file-with-the-4-nodes-as-validators" tabindex="-1">Step 3: Generate the genesis file with the 4 nodes as validators <a class="header-anchor" href="#step-3-generate-the-genesis-file-with-the-4-nodes-as-validators" aria-label="Permalink to &quot;Step 3: Generate the genesis file with the 4 nodes as validators&quot;">​</a></h2><p>This step can be run on your local machine, but you will need the public validator keys for each of the 4 validators.</p><p>Validators can safely share the <code>Public key (address)</code> as displayed below in the output to their <code>secrets init</code> commands, so that you may securely generate the genesis.json with those validators in the initial validator set, identified by their public keys:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[SECRETS INIT]</span></span>
<span class="line"><span style="color:#e1e4e8;">Public key (address) = 0xC12bB5d97A35c6919aC77C709d55F6aa60436900</span></span>
<span class="line"><span style="color:#e1e4e8;">Node ID              = 16Uiu2HAmVZnsqvTwuzC9Jd4iycpdnHdyVZJZTpVC8QuRSKmZdUrf</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[SECRETS INIT]</span></span>
<span class="line"><span style="color:#24292e;">Public key (address) = 0xC12bB5d97A35c6919aC77C709d55F6aa60436900</span></span>
<span class="line"><span style="color:#24292e;">Node ID              = 16Uiu2HAmVZnsqvTwuzC9Jd4iycpdnHdyVZJZTpVC8QuRSKmZdUrf</span></span></code></pre></div><p>Given that you have received all 4 of the validators&#39; public keys, you can run the following command to generate the <code>genesis.json</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--consensus</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ibft</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--ibft-validator=0xC12bB5d97A35c6919aC77C709d55F6aa60436900</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--ibft-validator=</span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">2nd_validator_pubkey</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--ibft-validator=</span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">3rd_validator_pubkey</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--ibft-validator=</span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">4th_validator_pubkey</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--bootnode=</span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">first_bootnode_multiaddr_connection_string_from_step_</span><span style="color:#F97583;">2&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--bootnode</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">second_bootnode_multiaddr_connection_string_from_step_</span><span style="color:#F97583;">2&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--bootnode</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">optionally_more_bootnode</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--consensus</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ibft</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--ibft-validator=0xC12bB5d97A35c6919aC77C709d55F6aa60436900</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--ibft-validator=</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">2nd_validator_pubkey</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--ibft-validator=</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">3rd_validator_pubkey</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--ibft-validator=</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">4th_validator_pubkey</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--bootnode=</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">first_bootnode_multiaddr_connection_string_from_step_</span><span style="color:#D73A49;">2&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--bootnode</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">second_bootnode_multiaddr_connection_string_from_step_</span><span style="color:#D73A49;">2&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--bootnode</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">optionally_more_bootnode</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>What this command does:</p><ul><li>The <code>--ibft-validator</code> sets the public key of the validator that should be included in the initial validator set in the genesis block. There can be many initial validators.</li><li>The <code>--bootnode</code> sets the address of the bootnode that will enable the nodes to find each other. We will use the multiaddr string of the <code>node 1</code>, as mentioned in <strong>step 2</strong>, although you can add as many bootnodes as you want, as displayed above.</li></ul><div class="info custom-block"><p class="custom-block-title">Premining account balances</p><p>You will probably want to set up your blockchain network with some addresses having &quot;premined&quot; balances.</p><p>To achieve this, pass as many <code>--premine</code> flags as you want per address that you want to be initialized with a certain balance on the blockchain.</p><p>For example, if we would like to premine 1000 ETH to address <code>0x3956E90e632AEbBF34DEB49b71c28A83Bc029862</code> in our genesis block, then we would need to supply the following argument:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">--premine=0x3956E90e632AEbBF34DEB49b71c28A83Bc029862:1000000000000000000000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">--premine=0x3956E90e632AEbBF34DEB49b71c28A83Bc029862:1000000000000000000000</span></span></code></pre></div><p><strong>Note that the premined amount is in WEI, not ETH.</strong></p></div><div class="info custom-block"><p class="custom-block-title">Set the block gas limit</p><p>The default gas limit for each block is <code>5242880</code>. This value is written in the genesis file, but you may want to increase / decrease it.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	GenesisFileName       </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./genesis.json&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	DefaultChainName      </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;example&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	DefaultChainID        </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span></span>
<span class="line"><span style="color:#E1E4E8;">	DefaultPremineBalance </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0x3635C9ADC5DEA00000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	DefaultConsensus      </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;pow&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	GenesisGasUsed        </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">458752</span></span>
<span class="line"><span style="color:#E1E4E8;">	GenesisGasLimit       </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5242880</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// The default block gas limit</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	GenesisFileName       </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./genesis.json&quot;</span></span>
<span class="line"><span style="color:#24292E;">	DefaultChainName      </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;example&quot;</span></span>
<span class="line"><span style="color:#24292E;">	DefaultChainID        </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span></span>
<span class="line"><span style="color:#24292E;">	DefaultPremineBalance </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0x3635C9ADC5DEA00000&quot;</span></span>
<span class="line"><span style="color:#24292E;">	DefaultConsensus      </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;pow&quot;</span></span>
<span class="line"><span style="color:#24292E;">	GenesisGasUsed        </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">458752</span></span>
<span class="line"><span style="color:#24292E;">	GenesisGasLimit       </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5242880</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// The default block gas limit</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>To do so, you can use the flag <code>--block-gas-limit</code> followed by the desired value as shown below :</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">--block-gas-limit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000000000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">--block-gas-limit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000000000</span></span></code></pre></div></div><div class="info custom-block"><p class="custom-block-title">Set system file descriptor limit</p><p>The default file descriptor limit ( maximum number of open files ) on some operating systems is pretty small. If the nodes are expected to have high throughput, you might consider increasing this limit on the OS level.</p><p>For Ubuntu distro the procedure is as follows ( if you&#39;re not using Ubuntu/Debian distro, check the official docs for your OS ) :</p><ul><li>Check current os limits ( open files )</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ubuntu@ubuntu:~$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ulimit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-a</span></span>
<span class="line"><span style="color:#B392F0;">core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">          (blocks, </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;">) 0</span></span>
<span class="line"><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">seg</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">           (kbytes, </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;">) unlimited</span></span>
<span class="line"><span style="color:#B392F0;">scheduling</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">priority</span><span style="color:#E1E4E8;">             (-e) 0</span></span>
<span class="line"><span style="color:#B392F0;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">               (blocks, </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;">) unlimited</span></span>
<span class="line"><span style="color:#B392F0;">pending</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">signals</span><span style="color:#E1E4E8;">                 (-i) 15391</span></span>
<span class="line"><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">locked</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memory</span><span style="color:#E1E4E8;">       (kbytes, </span><span style="color:#79B8FF;">-l</span><span style="color:#E1E4E8;">) 65536</span></span>
<span class="line"><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memory</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">         (kbytes, </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;">) unlimited</span></span>
<span class="line"><span style="color:#B392F0;">open</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">files</span><span style="color:#E1E4E8;">                      (-n) 1024</span></span>
<span class="line"><span style="color:#B392F0;">pipe</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">            (512 </span><span style="color:#9ECBFF;">bytes,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;">) 8</span></span>
<span class="line"><span style="color:#B392F0;">POSIX</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">message</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">queues</span><span style="color:#E1E4E8;">     (bytes, </span><span style="color:#79B8FF;">-q</span><span style="color:#E1E4E8;">) 819200</span></span>
<span class="line"><span style="color:#B392F0;">real-time</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">priority</span><span style="color:#E1E4E8;">              (-r) 0</span></span>
<span class="line"><span style="color:#B392F0;">stack</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">              (kbytes, </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;">) 8192</span></span>
<span class="line"><span style="color:#B392F0;">cpu</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">time</span><span style="color:#E1E4E8;">               (seconds, </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;">) unlimited</span></span>
<span class="line"><span style="color:#B392F0;">max</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">processes</span><span style="color:#E1E4E8;">              (-u) 15391</span></span>
<span class="line"><span style="color:#B392F0;">virtual</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memory</span><span style="color:#E1E4E8;">          (kbytes, </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;">) unlimited</span></span>
<span class="line"><span style="color:#B392F0;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">locks</span><span style="color:#E1E4E8;">                      (-x) unlimited</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ubuntu@ubuntu:~$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ulimit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-a</span></span>
<span class="line"><span style="color:#6F42C1;">core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">          (blocks, </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;">) 0</span></span>
<span class="line"><span style="color:#6F42C1;">data</span><span style="color:#24292E;"> </span><span style="color:#032F62;">seg</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">           (kbytes, </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;">) unlimited</span></span>
<span class="line"><span style="color:#6F42C1;">scheduling</span><span style="color:#24292E;"> </span><span style="color:#032F62;">priority</span><span style="color:#24292E;">             (-e) 0</span></span>
<span class="line"><span style="color:#6F42C1;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">               (blocks, </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;">) unlimited</span></span>
<span class="line"><span style="color:#6F42C1;">pending</span><span style="color:#24292E;"> </span><span style="color:#032F62;">signals</span><span style="color:#24292E;">                 (-i) 15391</span></span>
<span class="line"><span style="color:#6F42C1;">max</span><span style="color:#24292E;"> </span><span style="color:#032F62;">locked</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memory</span><span style="color:#24292E;">       (kbytes, </span><span style="color:#005CC5;">-l</span><span style="color:#24292E;">) 65536</span></span>
<span class="line"><span style="color:#6F42C1;">max</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memory</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">         (kbytes, </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;">) unlimited</span></span>
<span class="line"><span style="color:#6F42C1;">open</span><span style="color:#24292E;"> </span><span style="color:#032F62;">files</span><span style="color:#24292E;">                      (-n) 1024</span></span>
<span class="line"><span style="color:#6F42C1;">pipe</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">            (512 </span><span style="color:#032F62;">bytes,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;">) 8</span></span>
<span class="line"><span style="color:#6F42C1;">POSIX</span><span style="color:#24292E;"> </span><span style="color:#032F62;">message</span><span style="color:#24292E;"> </span><span style="color:#032F62;">queues</span><span style="color:#24292E;">     (bytes, </span><span style="color:#005CC5;">-q</span><span style="color:#24292E;">) 819200</span></span>
<span class="line"><span style="color:#6F42C1;">real-time</span><span style="color:#24292E;"> </span><span style="color:#032F62;">priority</span><span style="color:#24292E;">              (-r) 0</span></span>
<span class="line"><span style="color:#6F42C1;">stack</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">              (kbytes, </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;">) 8192</span></span>
<span class="line"><span style="color:#6F42C1;">cpu</span><span style="color:#24292E;"> </span><span style="color:#032F62;">time</span><span style="color:#24292E;">               (seconds, </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;">) unlimited</span></span>
<span class="line"><span style="color:#6F42C1;">max</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user</span><span style="color:#24292E;"> </span><span style="color:#032F62;">processes</span><span style="color:#24292E;">              (-u) 15391</span></span>
<span class="line"><span style="color:#6F42C1;">virtual</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memory</span><span style="color:#24292E;">          (kbytes, </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;">) unlimited</span></span>
<span class="line"><span style="color:#6F42C1;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">locks</span><span style="color:#24292E;">                      (-x) unlimited</span></span></code></pre></div><ul><li>Increase open files limit <ul><li>Localy - affects only current session:</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">ulimit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-u</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">65535</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">ulimit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-u</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">65535</span></span></code></pre></div><ul><li>Globaly or per user ( add limits at the end of /etc/security/limits.conf file ) :</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/security/limits.conf</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># we use vi, but you can use your favorite text editor</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/security/limits.conf</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># we use vi, but you can use your favorite text editor</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># /etc/security/limits.conf</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#Each line describes a limit for a user in the form:</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt;        &lt;type&gt;  &lt;item&gt;  &lt;value&gt;</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#Where:</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt; can be:</span></span>
<span class="line"><span style="color:#6A737D;">#        - a user name</span></span>
<span class="line"><span style="color:#6A737D;">#        - a group name, with @group syntax</span></span>
<span class="line"><span style="color:#6A737D;">#        - the wildcard *, for default entry</span></span>
<span class="line"><span style="color:#6A737D;">#        - the wildcard %, can be also used with %group syntax,</span></span>
<span class="line"><span style="color:#6A737D;">#                 for maxlogin limit</span></span>
<span class="line"><span style="color:#6A737D;">#        - NOTE: group and wildcard limits are not applied to root.</span></span>
<span class="line"><span style="color:#6A737D;">#          To apply a limit to the root user, &lt;domain&gt; must be</span></span>
<span class="line"><span style="color:#6A737D;">#          the literal username root.</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;type&gt; can have the two values:</span></span>
<span class="line"><span style="color:#6A737D;">#        - &quot;soft&quot; for enforcing the soft limits</span></span>
<span class="line"><span style="color:#6A737D;">#        - &quot;hard&quot; for enforcing hard limits</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;item&gt; can be one of the following:</span></span>
<span class="line"><span style="color:#6A737D;">#        - core - limits the core file size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - data - max data size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - fsize - maximum filesize (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - memlock - max locked-in-memory address space (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nofile - max number of open file descriptors</span></span>
<span class="line"><span style="color:#6A737D;">#        - rss - max resident set size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - stack - max stack size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - cpu - max CPU time (MIN)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nproc - max number of processes</span></span>
<span class="line"><span style="color:#6A737D;">#        - as - address space limit (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - maxlogins - max number of logins for this user</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#        - maxsyslogins - max number of logins on the system</span></span>
<span class="line"><span style="color:#6A737D;">#        - priority - the priority to run user process with</span></span>
<span class="line"><span style="color:#6A737D;">#        - locks - max number of file locks the user can hold</span></span>
<span class="line"><span style="color:#6A737D;">#        - sigpending - max number of pending signals</span></span>
<span class="line"><span style="color:#6A737D;">#        - msgqueue - max memory used by POSIX message queues (bytes)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nice - max nice priority allowed to raise to values: [-20, 19]</span></span>
<span class="line"><span style="color:#6A737D;">#        - rtprio - max realtime priority</span></span>
<span class="line"><span style="color:#6A737D;">#        - chroot - change root to directory (Debian-specific)</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt;      &lt;type&gt;  &lt;item&gt;         &lt;value&gt;</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#*               soft    core            0</span></span>
<span class="line"><span style="color:#6A737D;">#root            hard    core            100000</span></span>
<span class="line"><span style="color:#6A737D;">#*               hard    rss             10000</span></span>
<span class="line"><span style="color:#6A737D;">#@student        hard    nproc           20</span></span>
<span class="line"><span style="color:#6A737D;">#@faculty        soft    nproc           20</span></span>
<span class="line"><span style="color:#6A737D;">#@faculty        hard    nproc           50</span></span>
<span class="line"><span style="color:#6A737D;">#ftp             hard    nproc           0</span></span>
<span class="line"><span style="color:#6A737D;">#ftp             -       chroot          /ftp</span></span>
<span class="line"><span style="color:#6A737D;">#@student        -       maxlogins       4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">               soft    nofile          65535</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">               hard    nofile          65535</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># End of file</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># /etc/security/limits.conf</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#Each line describes a limit for a user in the form:</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt;        &lt;type&gt;  &lt;item&gt;  &lt;value&gt;</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#Where:</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt; can be:</span></span>
<span class="line"><span style="color:#6A737D;">#        - a user name</span></span>
<span class="line"><span style="color:#6A737D;">#        - a group name, with @group syntax</span></span>
<span class="line"><span style="color:#6A737D;">#        - the wildcard *, for default entry</span></span>
<span class="line"><span style="color:#6A737D;">#        - the wildcard %, can be also used with %group syntax,</span></span>
<span class="line"><span style="color:#6A737D;">#                 for maxlogin limit</span></span>
<span class="line"><span style="color:#6A737D;">#        - NOTE: group and wildcard limits are not applied to root.</span></span>
<span class="line"><span style="color:#6A737D;">#          To apply a limit to the root user, &lt;domain&gt; must be</span></span>
<span class="line"><span style="color:#6A737D;">#          the literal username root.</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;type&gt; can have the two values:</span></span>
<span class="line"><span style="color:#6A737D;">#        - &quot;soft&quot; for enforcing the soft limits</span></span>
<span class="line"><span style="color:#6A737D;">#        - &quot;hard&quot; for enforcing hard limits</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;item&gt; can be one of the following:</span></span>
<span class="line"><span style="color:#6A737D;">#        - core - limits the core file size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - data - max data size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - fsize - maximum filesize (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - memlock - max locked-in-memory address space (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nofile - max number of open file descriptors</span></span>
<span class="line"><span style="color:#6A737D;">#        - rss - max resident set size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - stack - max stack size (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - cpu - max CPU time (MIN)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nproc - max number of processes</span></span>
<span class="line"><span style="color:#6A737D;">#        - as - address space limit (KB)</span></span>
<span class="line"><span style="color:#6A737D;">#        - maxlogins - max number of logins for this user</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#        - maxsyslogins - max number of logins on the system</span></span>
<span class="line"><span style="color:#6A737D;">#        - priority - the priority to run user process with</span></span>
<span class="line"><span style="color:#6A737D;">#        - locks - max number of file locks the user can hold</span></span>
<span class="line"><span style="color:#6A737D;">#        - sigpending - max number of pending signals</span></span>
<span class="line"><span style="color:#6A737D;">#        - msgqueue - max memory used by POSIX message queues (bytes)</span></span>
<span class="line"><span style="color:#6A737D;">#        - nice - max nice priority allowed to raise to values: [-20, 19]</span></span>
<span class="line"><span style="color:#6A737D;">#        - rtprio - max realtime priority</span></span>
<span class="line"><span style="color:#6A737D;">#        - chroot - change root to directory (Debian-specific)</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#6A737D;">#&lt;domain&gt;      &lt;type&gt;  &lt;item&gt;         &lt;value&gt;</span></span>
<span class="line"><span style="color:#6A737D;">#</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#*               soft    core            0</span></span>
<span class="line"><span style="color:#6A737D;">#root            hard    core            100000</span></span>
<span class="line"><span style="color:#6A737D;">#*               hard    rss             10000</span></span>
<span class="line"><span style="color:#6A737D;">#@student        hard    nproc           20</span></span>
<span class="line"><span style="color:#6A737D;">#@faculty        soft    nproc           20</span></span>
<span class="line"><span style="color:#6A737D;">#@faculty        hard    nproc           50</span></span>
<span class="line"><span style="color:#6A737D;">#ftp             hard    nproc           0</span></span>
<span class="line"><span style="color:#6A737D;">#ftp             -       chroot          /ftp</span></span>
<span class="line"><span style="color:#6A737D;">#@student        -       maxlogins       4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">               soft    nofile          65535</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">               hard    nofile          65535</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># End of file</span></span></code></pre></div>Optionaly, modify additional parameters, save the file and restart the system. After restart check file descriptor limit again. It should be set to the value you defined in limits.conf file.</li></ul></div><p>After specifying the:</p><ol><li>Public keys of the validators to be included in the genesis block as the validator set</li><li>Bootnode multiaddr connection strings</li><li>Premined accounts and balances to be included in the genesis block</li></ol><p>and generating the <code>genesis.json</code>, you should copy it over to all of the VMs in the network. Depending on your setup you may copy/paste it, send it to the node operator, or simply SCP/FTP it over.</p><p>The structure of the genesis file is covered in the <a href="/docs/get-started/cli-commands">CLI Commands</a> section.</p><h2 id="step-4-run-all-the-clients" tabindex="-1">Step 4: Run all the clients <a class="header-anchor" href="#step-4-run-all-the-clients" aria-label="Permalink to &quot;Step 4: Run all the clients&quot;">​</a></h2><p>:::note Networking on Cloud providers</p><p>Most cloud providers don&#39;t expose the IP addresses (especially public ones) as a direct network interface on your VM but rather setup an invisible NAT proxy.</p><p>To allow the nodes to connect to each other in this case you would need to listen on the <code>0.0.0.0</code> IP address to bind on all interfaces, but you would still need to specify the IP address or DNS address which other nodes can use to connect to your instance. This is achieved either by using the <code>--nat</code> or <code>--dns</code> argument where you can specify your external IP or DNS address respectively.</p><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><p>The associated IP address that you wish to listen on is <code>192.0.2.1</code>, but it is not directly bound to any of your network interfaces.</p><p>To allow the nodes to connect you would pass the following parameters:</p><p><code>lyfebloc-core ... --libp2p 0.0.0.0:10001 --nat 192.0.2.1</code></p><p>Or, if you wish to specify a DNS address <code>dns/example.io</code>, pass the following parameters:</p><p><code>lyfebloc-core ... --libp2p 0.0.0.0:10001 --dns dns/example.io</code></p><p>This would make your node listen on all interfaces, but also make it aware that the clients are connecting to it through the specified <code>--nat</code> or <code>--dns</code> address.</p><p>:::</p><p>To run the <strong>first</strong> client:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">node-1&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis.json</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.0</span><span style="color:#9ECBFF;">.0.0:1478</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--nat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">public_or_private_i</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--seal</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">node-1&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./data-dir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis.json</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.0</span><span style="color:#032F62;">.0.0:1478</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--nat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">public_or_private_i</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--seal</span></span></code></pre></div><p>To run the <strong>second</strong> client:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">node-2&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis.json</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.0</span><span style="color:#9ECBFF;">.0.0:1478</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--nat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">public_or_private_i</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--seal</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">node-2&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./data-dir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis.json</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.0</span><span style="color:#032F62;">.0.0:1478</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--nat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">public_or_private_i</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--seal</span></span></code></pre></div><p>To run the <strong>third</strong> client:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">node-3&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis.json</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.0</span><span style="color:#9ECBFF;">.0.0:1478</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--nat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">public_or_private_i</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--seal</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">node-3&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./data-dir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis.json</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.0</span><span style="color:#032F62;">.0.0:1478</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--nat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">public_or_private_i</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--seal</span></span></code></pre></div><p>To run the <strong>fourth</strong> client:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">node-4&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis.json</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.0</span><span style="color:#9ECBFF;">.0.0:1478</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--nat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">public_or_private_i</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--seal</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">node-4&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./data-dir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis.json</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.0</span><span style="color:#032F62;">.0.0:1478</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--nat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">public_or_private_i</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--seal</span></span></code></pre></div><p>After running the previous commands, you have set up a 4 node Lyfebloc Network network, capable of sealing blocks and recovering from node failure.</p><div class="info custom-block"><p class="custom-block-title">Start the client using config file</p><p>Instead of specifying all configuration parameters as CLI arguments, the Client can also be started using a config file by executing the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--config</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">config_file_pat</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--config</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">config_file_pat</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>Example :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./test/config-node1.json</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./test/config-node1.json</span></span></code></pre></div><p>Currently, we only support <code>json</code> based configuration file, sample config file can be found <a href="/docs/configuration/sample-config">here</a></p></div><div class="info custom-block"><p class="custom-block-title">Steps to run a non-validator node</p><p>A Non-validator will always sync the latest blocks received from the validator node, you can start a non-validator node by running the following command.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">directory_pat</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">genesis_filenam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">IPAddress:PortN</span><span style="color:#E1E4E8;">o</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--nat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">public_or_private_i</span><span style="color:#E1E4E8;">p</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">directory_pat</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">genesis_filenam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">IPAddress:PortN</span><span style="color:#24292E;">o</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--nat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">public_or_private_i</span><span style="color:#24292E;">p</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>For example, you can add <strong>fifth</strong> Non-validator client by executing the following command :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./data-dir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genesis.json</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--libp2p</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.0</span><span style="color:#9ECBFF;">.0.0:1478</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--nat</span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">public_or_private_ip</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--data-dir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./data-dir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genesis.json</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--libp2p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.0</span><span style="color:#032F62;">.0.0:1478</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--nat</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">public_or_private_ip</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div></div><div class="info custom-block"><p class="custom-block-title">Specify the price limit</p><p>A Lyfebloc Network node can be started with a set <strong>price limit</strong> for incoming transactions.</p><p>The unit for the price limit is <code>wei</code>.</p><p>Setting a price limit means that any transaction processed by the current node will need to have a gas price <strong>higher</strong> than the set price limit, otherwise it will not be included into a block.</p><p>Having the majority of nodes respect a certain price limit enforces the rule that transactions in the network cannot be below a certain price threshold.</p><p>The default value for the price limit is <code>0</code>, meaning it is not enforced at all by default.</p><p>Example of using the <code>--price-limit</code> flag:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">lyfebloc-core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--price-limit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">lyfebloc-core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--price-limit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span></span></code></pre></div><p>It is worth noting that price limits <strong>are enforced only on non-local transactions</strong>, meaning that the price limit does not apply to transactions added locally on the node.</p></div>`,73),t=[p];function c(r,i,y,d,E,h){return a(),n("div",null,t)}const F=s(l,[["render",c]]);export{g as __pageData,F as default};
